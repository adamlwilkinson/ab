########################################################################
#
#   Autobench test configuration file for mysql-bench benchmark
#
########################################################################

TEST_MODULE=sysbench_standard
. $AUTOBENCH_INCDIR/$TEST_MODULE.inc

. $AUTOBENCH_INCDIR/engine_stat.inc.1

test_setup()
{
  # 
  # Put additional initialization code below
  #
  #profile information
  USE_OPROFILE=1
  #VMLINUX=/tmp/vmlinux-2.6.16.46-0.12-smp
  #VMLINUX=/tmp/vmlinux-2.6.16.60-0.21-smp
  VMLINUX=/tmp/vmlinux-2.6.18-92.1.18.el5

  #System statistic information: sar/vmstat/iostat
  COLLECT_STAT=1
  TEST_STAT_SAMPLE=1 # Get sample each 10 seconds

  #Test name
  TEST_NAME="sysbench_standard"
  
  #If test have subtests specify them here
  TEST_CASES="OLTP_RW OLTP_RO UPDATE_KEY UPDATE_NO_KEY \
  SELECT_DISTINCT_RANGES \
  SELECT_ORDER_RANGES \
  SELECT_SUM_RANGES \
  SELECT_SIMPLE_RANGES \
  POINT_SELECT"

  # Basedir for backup datafiles
  #TEST_BACKUP_BASEDIR="$AUTOBENCH_BACKUPDIR/sysbench-standard"
  TEST_BACKUP_BASEDIR="/data0/ranger/ab/backup/sysbench-std-1M"

  TEST_STAGE_PREPARE_GENERATE=""  # GENERATE INITIAL DATASET AND LOAD IT
  TEST_STAGE_PREPARE_RESTORE="1"  # RESTORE DATADIR FROM BACKUP

  # Number of rows for sbtest database
  SYSBENCH_NUM_ROWS=1000000

  # sysbench binary
  TEST_STAGE_RUN_EXE=$SYSBENCH_0_4_EXE
  
  #
  ENGINE_DEFAULTS_FILE_MYISAM=$TEST_CNF_DIR/sysbench-std-myisam.stat.cnf
  ENGINE_DEFAULTS_FILE_INNODB=$TEST_CNF_DIR/sysbench-std-innodb.stat.cnf

  ENGINE_DEFAULTS_FILE_MYISAM_NOAUTOINC=$TEST_CNF_DIR/sysbench-std-myisam.stat.cnf
  ENGINE_DEFAULTS_FILE_INNODB_NOAUTOINC=$TEST_CNF_DIR/sysbench-std-innodb.stat.cnf

  IMONITOR=1
  IMONITOR_SLEEP_DELAY=15
  PMONITOR=1

  MAX_TABLES=20000

  MYSQLD_ENV="LD_PRELOAD=/data0/ranger/gprof-helper.so "
}

test_pre_run()
{
  if [ -n "$MYSQL_CREATE_OPTIONS" ]; 
  then 
    SB_ARGS=$SB_ARGS' --mysql-create-options="$MYSQL_CREATE_OPTIONS"'
    echo "HERE $MYSQL_CREATE_OPTIONS"
  fi

  TEST_ARGS_STAGE_PREPARE='--db-name=$SERVER_DB --mysql-bin=$MYSQL \
                           --mysql-args=\"$MYSQL_ARGS\" \
                           --sysbench-bin=$TEST_STAGE_RUN_EXE \
                           --sysbench-args=\"'$SB_ARGS' prepare\"'

  TEST_ARGS_STAGE_RUN=$SB_ARGS' ${!TEST_CASE} run'

}

test_stage_prepare_pre()
{
 OPEN_FILES=`ulimit -n`;
 if [ $OPEN_FILES -le $MAX_TABLES ]; then
   ulimit -n $MAX_TABLES > /dev/null 2>&1
   if [ $? -ne 0 ]; then
     echo "ERROR: Can't increase number of open files to $MAX_TABLES"
     echo "Available number of open files: $OPEN_FILES. Please fix this and run test again"
     exit 1
   fi
 fi

}

      
test_stage_run_pre()
{
  engine_stat.setup
  engine_stat.pse_start
}
      
test_stage_run_post()
{
  engine_stat.stop
  engine_stat.pse_stop
}
